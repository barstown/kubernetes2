# talm: nodes=["10.0.10.73"], endpoints=["10.0.10.73"], templates=["templates/worker.yaml"]
# THIS FILE IS AUTOGENERATED. PREFER TEMPLATE EDITS OVER MANUAL ONES.
machine:
  type: worker
  certSANs:
    - 127.0.0.1
    - talos.lab.barstow.xyz
  kubelet:
    extraConfig:
      cpuManagerPolicy: static
      maxPods: 512
    nodeIP:
      validSubnets:
        - 10.0.10.0/25
  network:
    hostname: talos-w1.lab.barstow.xyz
    # -- Discovered interfaces:
    # ens18:
    #   hardwareAddr:bc:24:11:af:12:f0
    #   busPath: 0000:06:12.0
    #   driver: virtio_net
    #   vendor: Red Hat, Inc.
    #   product: Virtio network device)
    interfaces:
      - interface: ens18
        addresses:
          - 10.0.10.73/25
        routes:
          - network: 0.0.0.0/0
            gateway: 10.0.10.1
    nameservers:
      - 10.0.10.22
      - 10.0.10.20
  install:
    # -- Discovered disks:
    # /dev/sda:
    #    model: QEMU HARDDISK
    #    serial: 
    #    wwid: 
    #    size: 64 GB
    # /dev/sr0:
    #    model: QEMU DVD-ROM
    #    serial: 
    #    wwid: 
    #    size: 223 MB
    disk: /dev/sda
    image: factory.talos.dev/metal-installer-secureboot/06bf98081ab80adce0d2e924dc3ec3e4f249bd8035933d99646e284ccb26511b:v1.11.2
  files:
    - content: |
        [plugins]
          [plugins."io.containerd.grpc.v1.cri"]
            device_ownership_from_security_context = true
          [plugins."io.containerd.cri.v1.runtime"]
            device_ownership_from_security_context = true
      permissions: 0o0
      path: /etc/cri/conf.d/20-customization.part
      op: create
    - content: |
        backup {
          backup = 0
          archive = 0
        }
        devices {
           global_filter = [ "r|^/dev/drbd.*|", "r|^/dev/dm-.*|", "r|^/dev/zd.*|" ]
        }
      permissions: 0o644
      path: /etc/lvm/lvm.conf
      op: overwrite
  sysctls:
    net.ipv4.neigh.default.gc_thresh1: "4096"
    net.ipv4.neigh.default.gc_thresh2: "8192"
    net.ipv4.neigh.default.gc_thresh3: "16384"
  registries:
    mirrors:
      docker.io:
        endpoints:
          - https://mirror.gcr.io
  kernel:
    modules:
      - name: openvswitch
      - name: drbd
        parameters:
          - usermode_helper=disabled
      - name: zfs
      - name: spl
      - name: vfio_pci
      - name: vfio_iommu_type1
cluster:
  controlPlane:
    endpoint: https://talos.lab.barstow.xyz:6443
  clusterName: talos
  network:
    cni:
      name: none
    serviceSubnets:
      - 10.96.0.0/16
  inlineManifests:
    - name: cilium
      contents: "---\n# Source: cilium/templates/cilium-secrets-namespace.yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: \"cilium-secrets\"\n  labels:\n    app.kubernetes.io/part-of: cilium\n  annotations:\n---\n# Source: cilium/templates/cilium-agent/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-envoy/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium-envoy\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-ca-secret.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: cilium-ca\n  namespace: kube-system\ndata:\n  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTzBGUjFwT0hCd0RVMjZ6bEc2VTdTekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3T1RJMk1UY3lOakEyV2hjTk1qZ3dPVEkxTVRjeQpOakEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGZBN2V3WVJ3azI1UzQ4cTdEcnkvMnZKWFlpbVFmMi91clRmMXptYXZSNHQvV0x0MDUKOUgxY3Fnb2JkOEk4T1loN0lta1hlRDNtdnUzbzYrTzNRZCszWnJKSWEycHMxSFMxOWtrUlNhNkFIZ1pEUFVZZgpmYTdmNmFrVExpKzVYemJ3NFdZdmUwUXd4cHJERnRKRDJZUUU1TVFFRXVHaWtTeVNFaUE4VmJpU3ZxWWpaRlJ3CmFxUTZpQldCbjVHMHRzME5GWmJmaUZ0VjJxS0tsN1VUaThTNHJjL1NOV2k1eDQvbnNjNzc1bkwrdExrV3VRTE0KTjY0YWY5UFNnZHhJY3krYkNIRytMaE1FWHVPcm93dEE5VnJyYVZocEJhVmQxQWJpQlJqV3pWOVE2VC94QnRkUAptTlY3bjdUdnpsdm8zcmdRVkQ5RzBRYjlNZDlQQ2Q4WldTWHZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxR3d3cXpyQW56bGhxd1RUOVdzWGRiMkgzS293RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLUnI4cmtBUEttK3VtRENmUjJqUzNRWWxyUnNDeGwyeGdDVUhlV1RKOE9XazBDcXRDN2dGZ3F5CkF2N0pxUlRkQWdLOVBqb2FpL01lbzlHdGdLZlpFejVNRm5BNXNsRmhwdkdyWWI0VkhOZ0k5ZnRLVjdqMDYwOU0KbzZmWVRsa2t1Z2YxU2tpYUM3ZDZ3ZVlZR1JuVlhtcWtNSkMva0QvQjFKQ1Zud01wcEpqLzQ4d010VGlWOTIvYQovSE9zQzRrNHk4dDdqTENxRmxCbkhCTk0rdFJqVXluVGtrRXpqek9OemNZS1JWTUcxRWZDRXhPWW1FRVQySkdxCjNxTVowYU1CMCtFTzEzMjI2NVVHVldPS3k0NjAwKzRCKzJJWmJyZ2gxWWltbVBGRXQ5UEh0b0s1czFkT29JUGIKVklVd0M0dG0welA1YTlsOGJiZ2I3UkFjenI0RDYrZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM3dPM3NHRWNKTnVVdVBLdXc2OHY5cnlWMklwa0g5djdxMDM5YzVtcjBlTGYxaTdkCk9mUjlYS29LRzNmQ1BEbUlleUpwRjNnOTVyN3Q2T3ZqdDBIZnQyYXlTR3RxYk5SMHRmWkpFVW11Z0I0R1F6MUcKSDMydTMrbXBFeTR2dVY4MjhPRm1MM3RFTU1hYXd4YlNROW1FQk9URUJCTGhvcEVza2hJZ1BGVzRrcjZtSTJSVQpjR3FrT29nVmdaK1J0TGJORFJXVzM0aGJWZHFpaXBlMUU0dkV1SzNQMGpWb3VjZVA1N0hPKytaeS9yUzVGcmtDCnpEZXVHbi9UMG9IY1NITXZtd2h4dmk0VEJGN2pxNk1MUVBWYTYybFlhUVdsWGRRRzRnVVkxczFmVU9rLzhRYlgKVDVqVmU1KzA3ODViNk42NEVGUS9SdEVHL1RIZlR3bmZHVmtsN3dJREFRQUJBb0lCQUFFVHR3VGlpeXpBWkxqNQo3dzhoM3ZUdGx6bXEvVzNMOWF5dm5UdzhMMEM5dkVBQURQQjFOay9Hd0hLK2d0RWdwQUNZTzNLeUVYWjJVSmJSCjRORW5QOG5XZEtEMTU5Y3J0WDZWZUdmZGQ3ckZxbGtUeUMxcHdYanlXMjhzeDIwNVFQNHIwSDhGTk9DWmJQRHAKUU0yMEZMZWpWVEVCMkZZZEpsNTBPUFNobzFrT0VWWTVEdUpBL0hMeXFRQ1VkcWs1a3F4Q3FDNzFRV29nRGhlWApEbmlVR2c1Z2RSRkhYZE9hb0Z4RG9vajB6NlhHVEpKSGlBOVpqOUVXUStaSHp0bzRYRjlRZ21PRThnakFEUHUrCnBxMFBjOVY5S054eGQ1NFo2RS9VYWRKeWx3TkVBTHhsTWFYYkNCc09OWW1yREEyd2doM1o2Z3RSTzdzY253NEgKT2gwQS95VUNnWUVBMzU2a3QwZ0E0ME9VVXJKajFaRU1ZZ3g5ZHJUN052Nm9iY09GSnhmU1lpSDNoOE1YUWxHQwpPMkZtaTdNSUxtRFhuM1FMM1MvMWllRXh2eEl1WUdianhTcU1jWjNCK09NWDJiS2l6UFZXZkh5L2dzcmJvVjc3CjF5am9OS3VkOGZZeGcwcUpWVHYzTERLMHVWamcwMEVWSzhlZ3JBNlpZUHZFbXppRk5JQXlQK01DZ1lFQS8wNmsKQnQxTHFZKzhaVEdKTUhYNms1UllyVGVLMFlmQVl5cy96UGJQN0lPeGVUVXYzQVJxa045RlcrRjExOEhtaHNRcApCOGR1NWRLRDRWbytXS3hvaEM1Qk1kajVNOXJXMHlMenhUT24yZ2Z4OFhDYVpXZjVhMkxKM0pqYTcwcUhOSEVwCndlOStHblB2d3FwRmhOTUN1b0I4cUhkOHhBN2tiNlVOUHoxQ1I0VUNnWUF3bWlacXYzZVI3WW83UHhKN3hIN1EKZ0s1ME1ubTNSam9OUVVXYmJZNElUaUdpbkVCZDVhRk1qcXJmQ2hacEhocy9TTldiU1dVd2hvVnRaZUkyaWFaUApvQ1BPUGQ5KzNMeStVQmthT3VpRlBnZlJ3WTFpMFdZaktYenVsYTVLZkp2ZVVVRHdDWXg3U3JvRTN0QmVtZktrCkJVdGltZm0wSG9Sb3lDd0xjU0Y2eVFLQmdRRHNkYzZ2Mk9pS0RHbUdKQUlYVXo0WXo4M3Q2TUoyM0UrUXllN1cKakVYNW5lT1RDbkxnU1dyVjhTVFJPNW1ra3A5TGRJVTRBanV4T25BUkdUOGphOU9Ga1QycXlIWE8xRUloM1g1Lwp5QjhQYmtwa3YxRVEyT01HMWNGMndsQU1UeSs0bjVMNFh6T2hsbjJiQTQ5TnZRNEs1SlFRaUZLVFYrTzFqOTRjCkUwVys3UUtCZ1FDUGh4cHhRNmhXUFBnU05hcjdGdlhNSlJwZlFaV0xtK2dpbnR4WWszTkdQdUFmMzFvc1VRSWkKY0Z0T2tscWNJR0tBVGxSSytTREZhamdxK20vaG16MGNhallOcEd4UVpzbmpvaWhrUWJ5emRieDNVTFVOTG1iOQpsQmNOeTErc0o1RXBUZDhaWGFHRVEwSEhrMDIvYm1WSHJibTJPOUdYZ1BUQ05vSDBEU2o5bHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\n---\n# Source: cilium/templates/hubble/tls-helm/server-secret.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: hubble-server-certs\n  namespace: kube-system\ntype: kubernetes.io/tls\ndata:\n  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTzBGUjFwT0hCd0RVMjZ6bEc2VTdTekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3T1RJMk1UY3lOakEyV2hjTk1qZ3dPVEkxTVRjeQpOakEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGZBN2V3WVJ3azI1UzQ4cTdEcnkvMnZKWFlpbVFmMi91clRmMXptYXZSNHQvV0x0MDUKOUgxY3Fnb2JkOEk4T1loN0lta1hlRDNtdnUzbzYrTzNRZCszWnJKSWEycHMxSFMxOWtrUlNhNkFIZ1pEUFVZZgpmYTdmNmFrVExpKzVYemJ3NFdZdmUwUXd4cHJERnRKRDJZUUU1TVFFRXVHaWtTeVNFaUE4VmJpU3ZxWWpaRlJ3CmFxUTZpQldCbjVHMHRzME5GWmJmaUZ0VjJxS0tsN1VUaThTNHJjL1NOV2k1eDQvbnNjNzc1bkwrdExrV3VRTE0KTjY0YWY5UFNnZHhJY3krYkNIRytMaE1FWHVPcm93dEE5VnJyYVZocEJhVmQxQWJpQlJqV3pWOVE2VC94QnRkUAptTlY3bjdUdnpsdm8zcmdRVkQ5RzBRYjlNZDlQQ2Q4WldTWHZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxR3d3cXpyQW56bGhxd1RUOVdzWGRiMkgzS293RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLUnI4cmtBUEttK3VtRENmUjJqUzNRWWxyUnNDeGwyeGdDVUhlV1RKOE9XazBDcXRDN2dGZ3F5CkF2N0pxUlRkQWdLOVBqb2FpL01lbzlHdGdLZlpFejVNRm5BNXNsRmhwdkdyWWI0VkhOZ0k5ZnRLVjdqMDYwOU0KbzZmWVRsa2t1Z2YxU2tpYUM3ZDZ3ZVlZR1JuVlhtcWtNSkMva0QvQjFKQ1Zud01wcEpqLzQ4d010VGlWOTIvYQovSE9zQzRrNHk4dDdqTENxRmxCbkhCTk0rdFJqVXluVGtrRXpqek9OemNZS1JWTUcxRWZDRXhPWW1FRVQySkdxCjNxTVowYU1CMCtFTzEzMjI2NVVHVldPS3k0NjAwKzRCKzJJWmJyZ2gxWWltbVBGRXQ5UEh0b0s1czFkT29JUGIKVklVd0M0dG0welA1YTlsOGJiZ2I3UkFjenI0RDYrZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRUzBNSmFXTXJGR294SnF4bXdUenBZVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3T1RJMk1UY3lOakEyV2hjTk1qWXdPVEkyTVRjeQpOakEyV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdkdTOUt0Y3RUbU5QM2w3TzRQSloKTng1Z1BZYXE5Rng0K2NiM0tvRjJhdmJycHo2RDU0T2w5Q3Y4cGlYTVVZV0RmR3FUSlduVUVJRDZrMUZZOXBHcQoxOENpVUNBRGdSQ0ltV0NxUlgvZjhyWElNOFhPY2dBc0pNQVQzRjI1WE1GL056UkV1ZkJCWjlaYlVSNVV6d1VsCmtZUS9mWnBySjFrcktwUWZ4UzNXbGpNeVJNbjNwZnFneC9DRzByZk5JVUdVUjNUUVAzYmNneVc2dkxTSFZYZVYKQnFLR0xNWHArWnVEZTl3WmI5TzVUc0htVnd1TSs4cURPRVB6QktsMStSYVdPTk1GNTBwRHVlRnBEaDhJZFIzSgpEcGhwUmtkRzNJclRGUXJlc1dHTnVRSXMvYWRjTDRST3hwTVFxLy9NOXduQmJ3T3J4ZUFXUmUrQnpGb0ZEODNUClR3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTb2JEQ3JPc0NmT1dHcgpCTlAxYXhkMXZZZmNxakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFET2lxUEhWcnhycVhzSE14Z3lWaXVBVmorNWUzY3gKdW1iZmtYQ2pvN2swRTNYNytmR1EzeG1DWUt5U0hBQ0duZzdkZU1xdWM4VUtQVVRNaVc5OXk4YjJpbWVoSWlyaApyVERIZEx3eGNTUkVEb1JlNG11R1l6c2NCdnZoS21hUWE1ZW52SVVteDk2UGpJNUVkQ3lFQmRmNjdzU3BYT2dHCmdTaHBYZCtsY3BmZEpCMFpROVlRd2Z1UW5xcU1OZCt6aXRJUFlZWG90WG9SYVJJdVBsSjk3aExYcXgzNVlMRnYKWlo4TWVGZ1FWOVJRemJIcVNSRkhsQ2VScEgxbStrUDFWNTBHMW01L252akNTK0JtYnMxWkFwOHZhN3FUZVJnOApabzhjYTF1TVJVRDJndnNzbkdIeEFvWGhaNkNHMUQxNVNmY2YrQ2RJRnFRYnNXSWJIdzhuem0yRQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdkdTOUt0Y3RUbU5QM2w3TzRQSlpOeDVnUFlhcTlGeDQrY2IzS29GMmF2YnJwejZECjU0T2w5Q3Y4cGlYTVVZV0RmR3FUSlduVUVJRDZrMUZZOXBHcTE4Q2lVQ0FEZ1JDSW1XQ3FSWC9mOHJYSU04WE8KY2dBc0pNQVQzRjI1WE1GL056UkV1ZkJCWjlaYlVSNVV6d1Vsa1lRL2ZacHJKMWtyS3BRZnhTM1dsak15Uk1uMwpwZnFneC9DRzByZk5JVUdVUjNUUVAzYmNneVc2dkxTSFZYZVZCcUtHTE1YcCtadURlOXdaYjlPNVRzSG1Wd3VNCis4cURPRVB6QktsMStSYVdPTk1GNTBwRHVlRnBEaDhJZFIzSkRwaHBSa2RHM0lyVEZRcmVzV0dOdVFJcy9hZGMKTDRST3hwTVFxLy9NOXduQmJ3T3J4ZUFXUmUrQnpGb0ZEODNUVHdJREFRQUJBb0lCQURGeGZ2UXZaUVNkcStpQQptV3NRTDduM2p1cVczV2NrbmR0d0RJNXJTOWptMVJJZnBoNnN2bkZHMmhnQTg0NnhxOENMZC9McHcyNVJhM0llCmQycSs4RWVQbHduUVhSc1NhOGRWUjFyV0pNQmVWUnpCWFYwdURtZld3VitrZVhHT2x3UzJBeE9KcXFERjhWRm8KMUhsQXNJdHdXZmxzL1pKbUpKNFlJZjV0K1ZPUnlPa1JLV2hOaWRYMG55c2FDaWF3N29iNXpBUGJzSWk3aG1RQgp0bUdwcHlOcnlRV1QzNm5mTUZudWx6K0ljbW43cHNRU0tDSEJJTi9OL0lWZDAvaTQrMnFaZTZ0aGduVnp4SDBpCm41QVlDT2FvaVB0RGdYUE9FRFZaNHRXc1R6T2lQUTI0a1lvV2lPWGdtTTJ3VU51ejlWbHVxN3VtQy9HSVhvdFAKdGN1STNvRUNnWUVBM01zb25LYURYTkdrRmk0YlZpZ3haTFIreFdqK2NhREZVUHVwTE1ZVk5JN2Vqc3NvV3pUNwpuRW9CV2RmY214RWlmbVlTNnAwMHdzQmtzRDJHa1Z4NXdYZlpJdWtoc2xvUzlVSFVjOFovMXI4OWJUcjhsbXZRCm1lN1FZR3ZrNStwMnlQMmVBMzAzazg1RS9BWTF6cjZSWm44NkZBdndnVG5Nb2h0ZDhUM25NNDBDZ1lFQTJtOEEKa3c3WGNTZ1h2Q01xRkY5TVc0TWV1RHorYkxrOHRJbHY3cUgxYW9Oa0RJNHhtanQ1TEI2VXQ4TlByVk9QY0lTNQpHNFkzYU5HcTdNSjFKbnFhb0U5UGhndkdQNWE1V1J6cUx2VEJTNkc2OWN2Q3dxc1VMaVRqTmx3ZmRtcjdFVjNICm9ZY1RpRXkwQmlXSXc3S1FaRU5RaW5tY21MNnRPMUgrTkVjVjNVc0NnWUVBd29GZWg1SFJDNFhMYlphMGtsUGEKSDRNNllxSTU5TlBTdjZMVHlCUEFQb3JWMlNsenBkV3BDbWZQaE53N0JZZzB3UEVmSFB2Y3JPeGNSejRNUENZaApSS1JWN3dFOXBDYmhxSm1UbFdKNjRDMmM2WXNiVlZBcGRsSUIwODk0MmkyYzh6Y3BhcDEyeG9qaUVMdFB6NC9sCiswdDlXSWVrR2ROWFNEK2ZwSlFLQjBrQ2dZRUFoVkFGNjdxOUptU3Z4N1UyYzJTT043UFl4ZDBEOHR0Qy8zUjYKQ2d4eXVlVWk1TDdMNnpPdENvNUhlYmdNSXQ3Q3hvdGFaa0FPQlQwaHNvb2o4YTRXUFF6cW5nY0ZvYjJkdFpOKwpJZFpqT29Pa2xXc2NuSzdKRERpYks0d2g3Nlh2UVhRWTZLNkY3MFBSQTRkWTV3ZE9OTU1ZbnNzR0Zmc1p3d0NSCnd0bzNyKzBDZ1lBcHI4VGZjaEJSd3J2QllwZ01vYVdqZ3BvSi81Z0lrVjB3bDVyVG1ydmNKck52OHRVaTJSbUYKdGdFVTQ0ZTIzTDYxRDBPdmozcDdUTTUrWHVGUEhlYVN1VUQrZFMzdTZGS2pLMEJESDBRRDluUGxmRkNTL1FJeApwblprTE1YbWwrMTRSUERGNVB0U0ZVMU9zdG96MEg1T0NGUkxXL2NBUW55WHlxNnNVZUJtK1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\n---\n# Source: cilium/templates/cilium-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cilium-config\n  namespace: kube-system\ndata:\n\n  # Identity allocation mode selects how identities are shared between cilium\n  # nodes by setting how they are stored. The options are \"crd\", \"kvstore\" or\n  # \"doublewrite-readkvstore\" / \"doublewrite-readcrd\".\n  # - \"crd\" stores identities in kubernetes as CRDs (custom resource definition).\n  #   These can be queried with:\n  #     kubectl get ciliumid\n  # - \"kvstore\" stores identities in an etcd kvstore, that is\n  #   configured below. Cilium versions before 1.6 supported only the kvstore\n  #   backend. Upgrades from these older cilium versions should continue using\n  #   the kvstore by commenting out the identity-allocation-mode below, or\n  #   setting it to \"kvstore\".\n  # - \"doublewrite\" modes store identities in both the kvstore and CRDs. This is useful\n  #   for seamless migrations from the kvstore mode to the crd mode. Consult the\n  #   documentation for more information on how to perform the migration.\n  identity-allocation-mode: crd\n\n  identity-heartbeat-timeout: \"30m0s\"\n  identity-gc-interval: \"15m0s\"\n  cilium-endpoint-gc-interval: \"5m0s\"\n  nodes-gc-interval: \"5m0s\"\n\n  # If you want to run cilium in debug mode change this value to true\n  debug: \"false\"\n  debug-verbose: \"\"\n  metrics-sampling-interval: \"5m\"\n  # The agent can be put into the following three policy enforcement modes\n  # default, always and never.\n  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes\n  enable-policy: \"default\"\n  policy-cidr-match-mode: \"\"\n  # If you want metrics enabled in cilium-operator, set the port for\n  # which the Cilium Operator will have their metrics exposed.\n  # NOTE that this will open the port on the nodes where Cilium operator pod\n  # is scheduled.\n  operator-prometheus-serve-addr: \":9963\"\n  enable-metrics: \"true\"\n  enable-policy-secrets-sync: \"true\"\n  policy-secrets-only-from-secrets-namespace: \"true\"\n  policy-secrets-namespace: \"cilium-secrets\"\n\n  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4\n  # address.\n  enable-ipv4: \"true\"\n\n  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6\n  # address.\n  enable-ipv6: \"false\"\n  # Users who wish to specify their own custom CNI configuration file must set\n  # custom-cni-conf to \"true\", otherwise Cilium may overwrite the configuration.\n  custom-cni-conf: \"false\"\n  enable-bpf-clock-probe: \"false\"\n  # If you want cilium monitor to aggregate tracing for packets, set this level\n  # to \"low\", \"medium\", or \"maximum\". The higher the level, the less packets\n  # that will be seen in monitor output.\n  monitor-aggregation: medium\n\n  # The monitor aggregation interval governs the typical time between monitor\n  # notification events for each allowed connection.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-interval: \"5s\"\n\n  # The monitor aggregation flags determine which TCP flags which, upon the\n  # first observation, cause monitor notifications to be generated.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-flags: all\n  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic\n  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.\n  bpf-map-dynamic-size-ratio: \"0.0025\"\n  # bpf-policy-map-max specifies the maximum number of entries in endpoint\n  # policy map (per endpoint)\n  bpf-policy-map-max: \"16384\"\n  # bpf-policy-stats-map-max specifies the maximum number of entries in global\n  # policy stats map\n  bpf-policy-stats-map-max: \"65536\"\n  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,\n  # backend and affinity maps.\n  bpf-lb-map-max: \"65536\"\n  bpf-lb-external-clusterip: \"false\"\n  bpf-lb-source-range-all-types: \"false\"\n  bpf-lb-algorithm-annotation: \"false\"\n  bpf-lb-mode-annotation: \"false\"\n\n  bpf-distributed-lru: \"false\"\n  bpf-events-drop-enabled: \"true\"\n  bpf-events-policy-verdict-enabled: \"true\"\n  bpf-events-trace-enabled: \"true\"\n\n  # Pre-allocation of map entries allows per-packet latency to be reduced, at\n  # the expense of up-front memory allocation for the entries in the maps. The\n  # default value below will minimize memory usage in the default installation;\n  # users who are sensitive to latency may consider setting this to \"true\".\n  #\n  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore\n  # this option and behave as though it is set to \"true\".\n  #\n  # If this value is modified, then during the next Cilium startup the restore\n  # of existing endpoints and tracking of ongoing connections may be disrupted.\n  # As a result, reply packets may be dropped and the load-balancing decisions\n  # for established connections may change.\n  #\n  # If this option is set to \"false\" during an upgrade from 1.3 or earlier to\n  # 1.4 or later, then it may cause one-time disruptions during the upgrade.\n  preallocate-bpf-maps: \"false\"\n\n  # Name of the cluster. Only relevant when building a mesh of clusters.\n  cluster-name: \"default\"\n  # Unique ID of the cluster. Must be unique across all conneted clusters and\n  # in the range of 1 and 255. Only relevant when building a mesh of clusters.\n  cluster-id: \"0\"\n\n  # Encapsulation mode for communication between nodes\n  # Possible values:\n  #   - disabled\n  #   - vxlan (default)\n  #   - geneve\n\n  routing-mode: \"tunnel\"\n  tunnel-protocol: \"vxlan\"\n  tunnel-source-port-range: \"0-0\"\n  service-no-backend-response: \"reject\"\n\n\n  # Enables L7 proxy for L7 policy enforcement and visibility\n  enable-l7-proxy: \"true\"\n  enable-ipv4-masquerade: \"true\"\n  enable-ipv4-big-tcp: \"false\"\n  enable-ipv6-big-tcp: \"false\"\n  enable-ipv6-masquerade: \"true\"\n  enable-tcx: \"true\"\n  datapath-mode: \"veth\"\n  enable-masquerade-to-route-source: \"false\"\n\n  enable-xt-socket-fallback: \"true\"\n  install-no-conntrack-iptables-rules: \"false\"\n  iptables-random-fully: \"false\"\n\n  auto-direct-node-routes: \"false\"\n  direct-routing-skip-unreachable: \"false\"\n\n\n\n  kube-proxy-replacement: \"true\"\n  kube-proxy-replacement-healthz-bind-address: \"\"\n  bpf-lb-sock: \"false\"\n  nodeport-addresses: \"\"\n  enable-health-check-nodeport: \"true\"\n  enable-health-check-loadbalancer-ip: \"false\"\n  node-port-bind-protection: \"true\"\n  enable-auto-protect-node-port-range: \"true\"\n  bpf-lb-acceleration: \"disabled\"\n  enable-svc-source-range-check: \"true\"\n  enable-l2-neigh-discovery: \"false\"\n  k8s-require-ipv4-pod-cidr: \"false\"\n  k8s-require-ipv6-pod-cidr: \"false\"\n  enable-k8s-networkpolicy: \"true\"\n  enable-endpoint-lockdown-on-policy-overflow: \"false\"\n  # Tell the agent to generate and write a CNI configuration file\n  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist\n  cni-exclusive: \"true\"\n  cni-log-file: \"/var/run/cilium/cilium-cni.log\"\n  enable-endpoint-health-checking: \"true\"\n  enable-health-checking: \"true\"\n  health-check-icmp-failure-threshold: \"3\"\n  enable-well-known-identities: \"false\"\n  enable-node-selector-labels: \"false\"\n  synchronize-k8s-nodes: \"true\"\n  operator-api-serve-addr: \"127.0.0.1:9234\"\n\n  enable-hubble: \"true\"\n  # UNIX domain socket for Hubble server to listen to.\n  hubble-socket-path: \"/var/run/cilium/hubble.sock\"\n  hubble-network-policy-correlation-enabled: \"true\"\n  # An additional address for Hubble server to listen to (e.g. \":4244\").\n  hubble-listen-address: \":4244\"\n  hubble-disable-tls: \"false\"\n  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt\n  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key\n  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt\n  ipam: \"kubernetes\"\n  ipam-cilium-node-update-rate: \"15s\"\n\n  default-lb-service-ipam: \"lbipam\"\n  egress-gateway-reconciliation-trigger-interval: \"1s\"\n  enable-vtep: \"false\"\n  vtep-endpoint: \"\"\n  vtep-cidr: \"\"\n  vtep-mask: \"\"\n  vtep-mac: \"\"\n  procfs: \"/host/proc\"\n  bpf-root: \"/sys/fs/bpf\"\n  cgroup-root: \"/sys/fs/cgroup\"\n\n  identity-management-mode: \"agent\"\n  enable-sctp: \"false\"\n  remove-cilium-node-taints: \"true\"\n  set-cilium-node-taints: \"true\"\n  set-cilium-is-up-condition: \"true\"\n  unmanaged-pod-watcher-interval: \"15\"\n  # default DNS proxy to transparent mode in non-chaining modes\n  dnsproxy-enable-transparent-mode: \"true\"\n  dnsproxy-socket-linger-timeout: \"10\"\n  tofqdns-dns-reject-response-code: \"refused\"\n  tofqdns-enable-dns-compression: \"true\"\n  tofqdns-endpoint-max-ip-per-hostname: \"1000\"\n  tofqdns-idle-connection-grace-period: \"0s\"\n  tofqdns-max-deferred-connection-deletes: \"10000\"\n  tofqdns-proxy-response-max-delay: \"100ms\"\n  tofqdns-preallocate-identities:  \"true\"\n  agent-not-ready-taint-key: \"node.cilium.io/agent-not-ready\"\n\n  mesh-auth-enabled: \"true\"\n  mesh-auth-queue-size: \"1024\"\n  mesh-auth-rotated-identities-queue-size: \"1024\"\n  mesh-auth-gc-interval: \"5m0s\"\n\n  proxy-xff-num-trusted-hops-ingress: \"0\"\n  proxy-xff-num-trusted-hops-egress: \"0\"\n  proxy-connect-timeout: \"2\"\n  proxy-initial-fetch-timeout: \"30\"\n  proxy-max-requests-per-connection: \"0\"\n  proxy-max-connection-duration-seconds: \"0\"\n  proxy-idle-timeout-seconds: \"60\"\n  proxy-max-concurrent-retries: \"128\"\n  http-retry-count: \"3\"\n\n  external-envoy-proxy: \"true\"\n  envoy-base-id: \"0\"\n  envoy-access-log-buffer-size: \"4096\"\n  envoy-keep-cap-netbindservice: \"false\"\n  max-connected-clusters: \"255\"\n  clustermesh-enable-endpoint-sync: \"false\"\n  clustermesh-enable-mcs-api: \"false\"\n  policy-default-local-cluster: \"false\"\n\n  nat-map-stats-entries: \"32\"\n  nat-map-stats-interval: \"30s\"\n  enable-internal-traffic-policy: \"true\"\n  enable-lb-ipam: \"true\"\n  enable-non-default-deny-policies: \"true\"\n  enable-source-ip-verification: \"true\"\n\n# Extra config allows adding arbitrary properties to the cilium config.\n# By putting it at the end of the ConfigMap, it's also possible to override existing properties.\n---\n# Source: cilium/templates/cilium-envoy/configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cilium-envoy-config\n  namespace: kube-system\ndata:\n  # Keep the key name as bootstrap-config.json to avoid breaking changes\n  bootstrap-config.json: |\n    {\"admin\":{\"address\":{\"pipe\":{\"path\":\"/var/run/cilium/envoy/sockets/admin.sock\"}}},\"applicationLogConfig\":{\"logFormat\":{\"textFormat\":\"[%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v\"}},\"bootstrapExtensions\":[{\"name\":\"envoy.bootstrap.internal_listener\",\"typedConfig\":{\"@type\":\"type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener\"}}],\"dynamicResources\":{\"cdsConfig\":{\"apiConfigSource\":{\"apiType\":\"GRPC\",\"grpcServices\":[{\"envoyGrpc\":{\"clusterName\":\"xds-grpc-cilium\"}}],\"setNodeOnFirstMessageOnly\":true,\"transportApiVersion\":\"V3\"},\"initialFetchTimeout\":\"30s\",\"resourceApiVersion\":\"V3\"},\"ldsConfig\":{\"apiConfigSource\":{\"apiType\":\"GRPC\",\"grpcServices\":[{\"envoyGrpc\":{\"clusterName\":\"xds-grpc-cilium\"}}],\"setNodeOnFirstMessageOnly\":true,\"transportApiVersion\":\"V3\"},\"initialFetchTimeout\":\"30s\",\"resourceApiVersion\":\"V3\"}},\"node\":{\"cluster\":\"ingress-cluster\",\"id\":\"host~127.0.0.1~no-id~localdomain\"},\"overloadManager\":{\"resourceMonitors\":[{\"name\":\"envoy.resource_monitors.global_downstream_max_connections\",\"typedConfig\":{\"@type\":\"type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig\",\"max_active_downstream_connections\":\"50000\"}}]},\"staticResources\":{\"clusters\":[{\"circuitBreakers\":{\"thresholds\":[{\"maxRetries\":128}]},\"cleanupInterval\":\"2.500s\",\"connectTimeout\":\"2s\",\"lbPolicy\":\"CLUSTER_PROVIDED\",\"name\":\"ingress-cluster\",\"type\":\"ORIGINAL_DST\",\"typedExtensionProtocolOptions\":{\"envoy.extensions.upstreams.http.v3.HttpProtocolOptions\":{\"@type\":\"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\",\"commonHttpProtocolOptions\":{\"idleTimeout\":\"60s\",\"maxConnectionDuration\":\"0s\",\"maxRequestsPerConnection\":0},\"useDownstreamProtocolConfig\":{}}}},{\"circuitBreakers\":{\"thresholds\":[{\"maxRetries\":128}]},\"cleanupInterval\":\"2.500s\",\"connectTimeout\":\"2s\",\"lbPolicy\":\"CLUSTER_PROVIDED\",\"name\":\"egress-cluster-tls\",\"transportSocket\":{\"name\":\"cilium.tls_wrapper\",\"typedConfig\":{\"@type\":\"type.googleapis.com/cilium.UpstreamTlsWrapperContext\"}},\"type\":\"ORIGINAL_DST\",\"typedExtensionProtocolOptions\":{\"envoy.extensions.upstreams.http.v3.HttpProtocolOptions\":{\"@type\":\"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\",\"commonHttpProtocolOptions\":{\"idleTimeout\":\"60s\",\"maxConnectionDuration\":\"0s\",\"maxRequestsPerConnection\":0},\"upstreamHttpProtocolOptions\":{},\"useDownstreamProtocolConfig\":{}}}},{\"circuitBreakers\":{\"thresholds\":[{\"maxRetries\":128}]},\"cleanupInterval\":\"2.500s\",\"connectTimeout\":\"2s\",\"lbPolicy\":\"CLUSTER_PROVIDED\",\"name\":\"egress-cluster\",\"type\":\"ORIGINAL_DST\",\"typedExtensionProtocolOptions\":{\"envoy.extensions.upstreams.http.v3.HttpProtocolOptions\":{\"@type\":\"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\",\"commonHttpProtocolOptions\":{\"idleTimeout\":\"60s\",\"maxConnectionDuration\":\"0s\",\"maxRequestsPerConnection\":0},\"useDownstreamProtocolConfig\":{}}}},{\"circuitBreakers\":{\"thresholds\":[{\"maxRetries\":128}]},\"cleanupInterval\":\"2.500s\",\"connectTimeout\":\"2s\",\"lbPolicy\":\"CLUSTER_PROVIDED\",\"name\":\"ingress-cluster-tls\",\"transportSocket\":{\"name\":\"cilium.tls_wrapper\",\"typedConfig\":{\"@type\":\"type.googleapis.com/cilium.UpstreamTlsWrapperContext\"}},\"type\":\"ORIGINAL_DST\",\"typedExtensionProtocolOptions\":{\"envoy.extensions.upstreams.http.v3.HttpProtocolOptions\":{\"@type\":\"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\",\"commonHttpProtocolOptions\":{\"idleTimeout\":\"60s\",\"maxConnectionDuration\":\"0s\",\"maxRequestsPerConnection\":0},\"upstreamHttpProtocolOptions\":{},\"useDownstreamProtocolConfig\":{}}}},{\"connectTimeout\":\"2s\",\"loadAssignment\":{\"clusterName\":\"xds-grpc-cilium\",\"endpoints\":[{\"lbEndpoints\":[{\"endpoint\":{\"address\":{\"pipe\":{\"path\":\"/var/run/cilium/envoy/sockets/xds.sock\"}}}}]}]},\"name\":\"xds-grpc-cilium\",\"type\":\"STATIC\",\"typedExtensionProtocolOptions\":{\"envoy.extensions.upstreams.http.v3.HttpProtocolOptions\":{\"@type\":\"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\",\"explicitHttpConfig\":{\"http2ProtocolOptions\":{}}}}},{\"connectTimeout\":\"2s\",\"loadAssignment\":{\"clusterName\":\"/envoy-admin\",\"endpoints\":[{\"lbEndpoints\":[{\"endpoint\":{\"address\":{\"pipe\":{\"path\":\"/var/run/cilium/envoy/sockets/admin.sock\"}}}}]}]},\"name\":\"/envoy-admin\",\"type\":\"STATIC\"}],\"listeners\":[{\"address\":{\"socketAddress\":{\"address\":\"0.0.0.0\",\"portValue\":9964}},\"filterChains\":[{\"filters\":[{\"name\":\"envoy.filters.network.http_connection_manager\",\"typedConfig\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\",\"httpFilters\":[{\"name\":\"envoy.filters.http.router\",\"typedConfig\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\"}}],\"internalAddressConfig\":{\"cidrRanges\":[{\"addressPrefix\":\"10.0.0.0\",\"prefixLen\":8},{\"addressPrefix\":\"172.16.0.0\",\"prefixLen\":12},{\"addressPrefix\":\"192.168.0.0\",\"prefixLen\":16},{\"addressPrefix\":\"127.0.0.1\",\"prefixLen\":32}]},\"routeConfig\":{\"virtualHosts\":[{\"domains\":[\"*\"],\"name\":\"prometheus_metrics_route\",\"routes\":[{\"match\":{\"prefix\":\"/metrics\"},\"name\":\"prometheus_metrics_route\",\"route\":{\"cluster\":\"/envoy-admin\",\"prefixRewrite\":\"/stats/prometheus\"}}]}]},\"statPrefix\":\"envoy-prometheus-metrics-listener\",\"streamIdleTimeout\":\"300s\"}}]}],\"name\":\"envoy-prometheus-metrics-listener\"},{\"address\":{\"socketAddress\":{\"address\":\"127.0.0.1\",\"portValue\":9878}},\"filterChains\":[{\"filters\":[{\"name\":\"envoy.filters.network.http_connection_manager\",\"typedConfig\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\",\"httpFilters\":[{\"name\":\"envoy.filters.http.router\",\"typedConfig\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\"}}],\"internalAddressConfig\":{\"cidrRanges\":[{\"addressPrefix\":\"10.0.0.0\",\"prefixLen\":8},{\"addressPrefix\":\"172.16.0.0\",\"prefixLen\":12},{\"addressPrefix\":\"192.168.0.0\",\"prefixLen\":16},{\"addressPrefix\":\"127.0.0.1\",\"prefixLen\":32}]},\"routeConfig\":{\"virtual_hosts\":[{\"domains\":[\"*\"],\"name\":\"health\",\"routes\":[{\"match\":{\"prefix\":\"/healthz\"},\"name\":\"health\",\"route\":{\"cluster\":\"/envoy-admin\",\"prefixRewrite\":\"/ready\"}}]}]},\"statPrefix\":\"envoy-health-listener\",\"streamIdleTimeout\":\"300s\"}}]}],\"name\":\"envoy-health-listener\"}]}}\n---\n# Source: cilium/templates/cilium-agent/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium\n  labels:\n    app.kubernetes.io/part-of: cilium\nrules:\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - networkpolicies\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  - services\n  - pods\n  - endpoints\n  - nodes\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - list\n  - watch\n  # This is used when validating policies in preflight. This will need to stay\n  # until we figure out how to avoid \"get\" inside the preflight, and then\n  # should be removed ideally.\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumloadbalancerippools\n  - ciliumbgppeeringpolicies\n  - ciliumbgpnodeconfigs\n  - ciliumbgpadvertisements\n  - ciliumbgppeerconfigs\n  - ciliumclusterwideenvoyconfigs\n  - ciliumclusterwidenetworkpolicies\n  - ciliumegressgatewaypolicies\n  - ciliumendpoints\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  - ciliumidentities\n  - ciliumlocalredirectpolicies\n  - ciliumnetworkpolicies\n  - ciliumnodes\n  - ciliumnodeconfigs\n  - ciliumcidrgroups\n  - ciliuml2announcementpolicies\n  - ciliumpodippools\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  - ciliumendpoints\n  - ciliumnodes\n  verbs:\n  - create\n- apiGroups:\n  - cilium.io\n  # To synchronize garbage collection of such resources\n  resources:\n  - ciliumidentities\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  verbs:\n  - delete\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  - ciliumnodes/status\n  verbs:\n  - get\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints/status\n  - ciliumendpoints\n  - ciliuml2announcementpolicies/status\n  - ciliumbgpnodeconfigs/status\n  verbs:\n  - patch\n---\n# Source: cilium/templates/cilium-operator/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium-operator\n  labels:\n    app.kubernetes.io/part-of: cilium\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  verbs:\n  - get\n  - list\n  - watch\n  # to automatically delete [core|kube]dns pods so that are starting to being\n  # managed by Cilium\n  - delete\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  resourceNames:\n  - cilium-config\n  verbs:\n  # allow patching of the configmap to set annotations\n  - patch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # To remove node taints\n  - nodes\n  # To set NetworkUnavailable false on startup\n  - nodes/status\n  verbs:\n  - patch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform LB IP allocation for BGP\n  - services/status\n  verbs:\n  - update\n  - patch\n- apiGroups:\n  - \"\"\n  resources:\n  # to check apiserver connectivity\n  - namespaces\n  - secrets\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform the translation of a CNP that contains `ToGroup` to its endpoints\n  - services\n  - endpoints\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies\n  - ciliumclusterwidenetworkpolicies\n  verbs:\n  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'\n  - create\n  - update\n  - deletecollection\n  # To update the status of the CNPs and CCNPs\n  - patch\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies/status\n  - ciliumclusterwidenetworkpolicies/status\n  verbs:\n  # Update the auto-generated CNPs and CCNPs status.\n  - patch\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  - ciliumidentities\n  verbs:\n  # To perform garbage collection of such resources\n  - delete\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  verbs:\n  # To synchronize garbage collection of such resources\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n    # To perform CiliumNode garbage collector\n  - delete\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes/status\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  - ciliumbgppeerconfigs\n  - ciliumbgpadvertisements\n  - ciliumbgpnodeconfigs\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n  - delete\n  - patch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumbgpclusterconfigs/status\n  - ciliumbgppeerconfigs/status\n  verbs:\n  - update\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - create\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - update\n  resourceNames:\n  - ciliumloadbalancerippools.cilium.io\n  - ciliumbgppeeringpolicies.cilium.io\n  - ciliumbgpclusterconfigs.cilium.io\n  - ciliumbgppeerconfigs.cilium.io\n  - ciliumbgpadvertisements.cilium.io\n  - ciliumbgpnodeconfigs.cilium.io\n  - ciliumbgpnodeconfigoverrides.cilium.io\n  - ciliumclusterwideenvoyconfigs.cilium.io\n  - ciliumclusterwidenetworkpolicies.cilium.io\n  - ciliumegressgatewaypolicies.cilium.io\n  - ciliumendpoints.cilium.io\n  - ciliumendpointslices.cilium.io\n  - ciliumenvoyconfigs.cilium.io\n  - ciliumidentities.cilium.io\n  - ciliumlocalredirectpolicies.cilium.io\n  - ciliumnetworkpolicies.cilium.io\n  - ciliumnodes.cilium.io\n  - ciliumnodeconfigs.cilium.io\n  - ciliumcidrgroups.cilium.io\n  - ciliuml2announcementpolicies.cilium.io\n  - ciliumpodippools.cilium.io\n  - ciliumgatewayclassconfigs.cilium.io\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumloadbalancerippools\n  - ciliumpodippools\n  - ciliumbgppeeringpolicies\n  - ciliumbgpclusterconfigs\n  - ciliumbgpnodeconfigoverrides\n  - ciliumbgppeerconfigs\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n    - cilium.io\n  resources:\n    - ciliumpodippools\n  verbs:\n    - create\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumloadbalancerippools/status\n  verbs:\n  - patch\n# For cilium-operator running in HA mode.\n#\n# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election\n# between multiple running instances.\n# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less\n# common and fewer objects in the cluster watch \"all Leases\".\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - create\n  - get\n  - update\n---\n# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium\n  labels:\n    app.kubernetes.io/part-of: cilium\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium-operator\n  labels:\n    app.kubernetes.io/part-of: cilium\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium-operator\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-agent/role.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: cilium-config-agent\n  namespace: kube-system\n  labels:\n    app.kubernetes.io/part-of: cilium\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  verbs:\n  - get\n  - list\n  - watch\n---\n# Source: cilium/templates/cilium-agent/role.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: cilium-tlsinterception-secrets\n  namespace: \"cilium-secrets\"\n  labels:\n    app.kubernetes.io/part-of: cilium\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - secrets\n  verbs:\n  - get\n  - list\n  - watch\n---\n# Source: cilium/templates/cilium-operator/role.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: cilium-operator-tlsinterception-secrets\n  namespace: \"cilium-secrets\"\n  labels:\n    app.kubernetes.io/part-of: cilium\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - secrets\n  verbs:\n  - create\n  - delete\n  - update\n  - patch\n---\n# Source: cilium/templates/cilium-agent/rolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: cilium-config-agent\n  namespace: kube-system\n  labels:\n    app.kubernetes.io/part-of: cilium\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: cilium-config-agent\nsubjects:\n  - kind: ServiceAccount\n    name: \"cilium\"\n    namespace: kube-system\n---\n# Source: cilium/templates/cilium-agent/rolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: cilium-tlsinterception-secrets\n  namespace: \"cilium-secrets\"\n  labels:\n    app.kubernetes.io/part-of: cilium\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: cilium-tlsinterception-secrets\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/rolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: cilium-operator-tlsinterception-secrets\n  namespace: \"cilium-secrets\"\n  labels:\n    app.kubernetes.io/part-of: cilium\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: cilium-operator-tlsinterception-secrets\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-envoy/service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: cilium-envoy\n  namespace: kube-system\n  annotations:\n    prometheus.io/scrape: \"true\"\n    prometheus.io/port: \"9964\"\n  labels:\n    k8s-app: cilium-envoy\n    app.kubernetes.io/name: cilium-envoy\n    app.kubernetes.io/part-of: cilium\n    io.cilium/app: proxy\nspec:\n  clusterIP: None\n  type: ClusterIP\n  selector:\n    k8s-app: cilium-envoy\n  ports:\n  - name: envoy-metrics\n    port: 9964\n    protocol: TCP\n    targetPort: envoy-metrics\n---\n# Source: cilium/templates/hubble/peer-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: hubble-peer\n  namespace: kube-system\n  labels:\n    k8s-app: cilium\n    app.kubernetes.io/part-of: cilium\n    app.kubernetes.io/name: hubble-peer\n\nspec:\n  selector:\n    k8s-app: cilium\n  ports:\n  - name: peer-service\n    port: 443\n    protocol: TCP\n    targetPort: 4244\n  internalTrafficPolicy: Local\n---\n# Source: cilium/templates/cilium-agent/daemonset.yaml\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: cilium\n  namespace: kube-system\n  labels:\n    k8s-app: cilium\n    app.kubernetes.io/part-of: cilium\n    app.kubernetes.io/name: cilium-agent\nspec:\n  selector:\n    matchLabels:\n      k8s-app: cilium\n  updateStrategy:\n    rollingUpdate:\n      maxUnavailable: 2\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        kubectl.kubernetes.io/default-container: cilium-agent\n      labels:\n        k8s-app: cilium\n        app.kubernetes.io/name: cilium-agent\n        app.kubernetes.io/part-of: cilium\n    spec:\n      securityContext:\n        appArmorProfile:\n          type: Unconfined\n        seccompProfile:\n          type: Unconfined\n      containers:\n      - name: cilium-agent\n        image: \"quay.io/cilium/cilium:v1.18.2@sha256:858f807ea4e20e85e3ea3240a762e1f4b29f1cb5bbd0463b8aa77e7b097c0667\"\n        imagePullPolicy: IfNotPresent\n        command:\n        - cilium-agent\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        startupProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          failureThreshold: 300\n          periodSeconds: 2\n          successThreshold: 1\n          initialDelaySeconds: 5\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n            - name: \"require-k8s-connectivity\"\n              value: \"false\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 10\n          timeoutSeconds: 5\n        readinessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 3\n          timeoutSeconds: 5\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_CLUSTERMESH_CONFIG\n          value: /var/lib/cilium/clustermesh/\n        - name: GOMEMLIMIT\n          valueFrom:\n            resourceFieldRef:\n              resource: limits.memory\n              divisor: '1'\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"localhost\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"7445\"\n        - name: KUBE_CLIENT_BACKOFF_BASE\n          value: \"1\"\n        - name: KUBE_CLIENT_BACKOFF_DURATION\n          value: \"120\"\n        lifecycle:\n          postStart:\n            exec:\n              command:\n              - \"bash\"\n              - \"-c\"\n              - |\n                    set -o errexit\n                    set -o pipefail\n                    set -o nounset\n                    \n                    # When running in AWS ENI mode, it's likely that 'aws-node' has\n                    # had a chance to install SNAT iptables rules. These can result\n                    # in dropped traffic, so we should attempt to remove them.\n                    # We do it using a 'postStart' hook since this may need to run\n                    # for nodes which might have already been init'ed but may still\n                    # have dangling rules. This is safe because there are no\n                    # dependencies on anything that is part of the startup script\n                    # itself, and can be safely run multiple times per node (e.g. in\n                    # case of a restart).\n                    if [[ \"$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')\" != \"0\" ]];\n                    then\n                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'\n                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore\n                    fi\n                    echo 'Done!'\n                    \n          preStop:\n            exec:\n              command:\n              - /cni-uninstall.sh\n        securityContext:\n          seLinuxOptions:\n            level: s0\n            type: spc_t\n          capabilities:\n            add:\n              - CHOWN\n              - KILL\n              - NET_ADMIN\n              - NET_RAW\n              - IPC_LOCK\n              - SYS_ADMIN\n              - SYS_RESOURCE\n              - DAC_OVERRIDE\n              - FOWNER\n              - SETGID\n              - SETUID\n            drop:\n              - ALL\n        terminationMessagePolicy: FallbackToLogsOnError\n        volumeMounts:\n        - name: envoy-sockets\n          mountPath: /var/run/cilium/envoy/sockets\n          readOnly: false\n        # Unprivileged containers need to mount /proc/sys/net from the host\n        # to have write access\n        - mountPath: /host/proc/sys/net\n          name: host-proc-sys-net\n        # Unprivileged containers need to mount /proc/sys/kernel from the host\n        # to have write access\n        - mountPath: /host/proc/sys/kernel\n          name: host-proc-sys-kernel\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          # Unprivileged containers can't set mount propagation to bidirectional\n          # in this case we will mount the bpf fs from an init container that\n          # is privileged and set the mount propagation from host to container\n          # in Cilium.\n          mountPropagation: HostToContainer\n        # Check for duplicate mounts before mounting\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n        - name: cilium-run\n          mountPath: /var/run/cilium\n        - name: cilium-netns\n          mountPath: /var/run/cilium/netns\n          mountPropagation: HostToContainer\n        - name: etc-cni-netd\n          mountPath: /host/etc/cni/net.d\n        - name: clustermesh-secrets\n          mountPath: /var/lib/cilium/clustermesh\n          readOnly: true\n          # Needed to be able to load kernel modules\n        - name: lib-modules\n          mountPath: /lib/modules\n          readOnly: true\n        - name: xtables-lock\n          mountPath: /run/xtables.lock\n        - name: hubble-tls\n          mountPath: /var/lib/cilium/tls/hubble\n          readOnly: true\n        - name: tmp\n          mountPath: /tmp\n        \n      initContainers:\n      - name: config\n        image: \"quay.io/cilium/cilium:v1.18.2@sha256:858f807ea4e20e85e3ea3240a762e1f4b29f1cb5bbd0463b8aa77e7b097c0667\"\n        imagePullPolicy: IfNotPresent\n        command:\n        - cilium-dbg\n        - build-config\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"localhost\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"7445\"\n        volumeMounts:\n        - name: tmp\n          mountPath: /tmp\n        terminationMessagePolicy: FallbackToLogsOnError\n      - name: apply-sysctl-overwrites\n        image: \"quay.io/cilium/cilium:v1.18.2@sha256:858f807ea4e20e85e3ea3240a762e1f4b29f1cb5bbd0463b8aa77e7b097c0667\"\n        imagePullPolicy: IfNotPresent\n        env:\n        - name: BIN_PATH\n          value: /opt/cni/bin\n        command:\n        - sh\n        - -ec\n        # The statically linked Go program binary is invoked to avoid any\n        # dependency on utilities like sh that can be missing on certain\n        # distros installed on the underlying host. Copy the binary to the\n        # same directory where we install cilium cni plugin so that exec permissions\n        # are available.\n        - |\n          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;\n          nsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cilium-sysctlfix\";\n          rm /hostbin/cilium-sysctlfix\n        volumeMounts:\n        - name: hostproc\n          mountPath: /hostproc\n        - name: cni-path\n          mountPath: /hostbin\n        terminationMessagePolicy: FallbackToLogsOnError\n        securityContext:\n          seLinuxOptions:\n            level: s0\n            type: spc_t\n          capabilities:\n            add:\n              - SYS_ADMIN\n              - SYS_CHROOT\n              - SYS_PTRACE\n            drop:\n              - ALL\n      # Mount the bpf fs if it is not mounted. We will perform this task\n      # from a privileged container because the mount propagation bidirectional\n      # only works from privileged containers.\n      - name: mount-bpf-fs\n        image: \"quay.io/cilium/cilium:v1.18.2@sha256:858f807ea4e20e85e3ea3240a762e1f4b29f1cb5bbd0463b8aa77e7b097c0667\"\n        imagePullPolicy: IfNotPresent\n        args:\n        - 'mount | grep \"/sys/fs/bpf type bpf\" || mount -t bpf bpf /sys/fs/bpf'\n        command:\n        - /bin/bash\n        - -c\n        - --\n        terminationMessagePolicy: FallbackToLogsOnError\n        securityContext:\n          privileged: true\n        volumeMounts:\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          mountPropagation: Bidirectional\n      - name: clean-cilium-state\n        image: \"quay.io/cilium/cilium:v1.18.2@sha256:858f807ea4e20e85e3ea3240a762e1f4b29f1cb5bbd0463b8aa77e7b097c0667\"\n        imagePullPolicy: IfNotPresent\n        command:\n        - /init-container.sh\n        env:\n        - name: CILIUM_ALL_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-state\n              optional: true\n        - name: CILIUM_BPF_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-bpf-state\n              optional: true\n        - name: WRITE_CNI_CONF_WHEN_READY\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: write-cni-conf-when-ready\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"localhost\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"7445\"\n        terminationMessagePolicy: FallbackToLogsOnError\n        securityContext:\n          seLinuxOptions:\n            level: s0\n            type: spc_t\n          capabilities:\n            add:\n              - NET_ADMIN\n              - SYS_ADMIN\n              - SYS_RESOURCE\n            drop:\n              - ALL\n        volumeMounts:\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          # Required to mount cgroup filesystem from the host to cilium agent pod\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n          mountPropagation: HostToContainer\n        - name: cilium-run\n          mountPath: /var/run/cilium # wait-for-kube-proxy\n      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent\n      - name: install-cni-binaries\n        image: \"quay.io/cilium/cilium:v1.18.2@sha256:858f807ea4e20e85e3ea3240a762e1f4b29f1cb5bbd0463b8aa77e7b097c0667\"\n        imagePullPolicy: IfNotPresent\n        command:\n          - \"/install-plugin.sh\"\n        resources:\n          requests:\n            cpu: 100m\n            memory: 10Mi\n        securityContext:\n          seLinuxOptions:\n            level: s0\n            type: spc_t\n          capabilities:\n            drop:\n              - ALL\n        terminationMessagePolicy: FallbackToLogsOnError\n        volumeMounts:\n          - name: cni-path\n            mountPath: /host/opt/cni/bin # .Values.cni.install\n      restartPolicy: Always\n      priorityClassName: system-node-critical\n      serviceAccountName: \"cilium\"\n      automountServiceAccountToken: true\n      terminationGracePeriodSeconds: 1\n      hostNetwork: true\n      \n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                k8s-app: cilium\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n        # For sharing configuration between the \"config\" initContainer and the agent\n      - name: tmp\n        emptyDir: {}\n        # To keep state between restarts / upgrades\n      - name: cilium-run\n        hostPath:\n          path: /var/run/cilium\n          type: DirectoryOrCreate\n        # To exec into pod network namespaces\n      - name: cilium-netns\n        hostPath:\n          path: /var/run/netns\n          type: DirectoryOrCreate\n        # To keep state between restarts / upgrades for bpf maps\n      - name: bpf-maps\n        hostPath:\n          path: /sys/fs/bpf\n          type: DirectoryOrCreate\n      # To mount cgroup2 filesystem on the host or apply sysctlfix\n      - name: hostproc\n        hostPath:\n          path: /proc\n          type: Directory\n      # To keep state between restarts / upgrades for cgroup2 filesystem\n      - name: cilium-cgroup\n        hostPath:\n          path: /sys/fs/cgroup\n          type: DirectoryOrCreate\n      # To install cilium cni plugin in the host\n      - name: cni-path\n        hostPath:\n          path:  /opt/cni/bin\n          type: DirectoryOrCreate\n        # To install cilium cni configuration in the host\n      - name: etc-cni-netd\n        hostPath:\n          path: /etc/cni/net.d\n          type: DirectoryOrCreate\n        # To be able to load kernel modules\n      - name: lib-modules\n        hostPath:\n          path: /lib/modules\n        # To access iptables concurrently with other processes (e.g. kube-proxy)\n      - name: xtables-lock\n        hostPath:\n          path: /run/xtables.lock\n          type: FileOrCreate\n      # Sharing socket with Cilium Envoy on the same node by using a host path\n      - name: envoy-sockets\n        hostPath:\n          path: \"/var/run/cilium/envoy/sockets\"\n          type: DirectoryOrCreate\n        # To read the clustermesh configuration\n      - name: clustermesh-secrets\n        projected:\n          # note: the leading zero means this number is in octal representation: do not remove it\n          defaultMode: 0400\n          sources:\n          - secret:\n              name: cilium-clustermesh\n              optional: true\n              # note: items are not explicitly listed here, since the entries of this secret\n              # depend on the peers configured, and that would cause a restart of all agents\n              # at every addition/removal. Leaving the field empty makes each secret entry\n              # to be automatically projected into the volume as a file whose name is the key.\n          - secret:\n              name: clustermesh-apiserver-remote-cert\n              optional: true\n              items:\n              - key: tls.key\n                path: common-etcd-client.key\n              - key: tls.crt\n                path: common-etcd-client.crt\n              - key: ca.crt\n                path: common-etcd-client-ca.crt\n          # note: we configure the volume for the kvstoremesh-specific certificate\n          # regardless of whether KVStoreMesh is enabled or not, so that it can be\n          # automatically mounted in case KVStoreMesh gets subsequently enabled,\n          # without requiring an agent restart.\n          - secret:\n              name: clustermesh-apiserver-local-cert\n              optional: true\n              items:\n              - key: tls.key\n                path: local-etcd-client.key\n              - key: tls.crt\n                path: local-etcd-client.crt\n              - key: ca.crt\n                path: local-etcd-client-ca.crt\n      - name: host-proc-sys-net\n        hostPath:\n          path: /proc/sys/net\n          type: Directory\n      - name: host-proc-sys-kernel\n        hostPath:\n          path: /proc/sys/kernel\n          type: Directory\n      - name: hubble-tls\n        projected:\n          # note: the leading zero means this number is in octal representation: do not remove it\n          defaultMode: 0400\n          sources:\n          - secret:\n              name: hubble-server-certs\n              optional: true\n              items:\n              - key: tls.crt\n                path: server.crt\n              - key: tls.key\n                path: server.key\n              - key: ca.crt\n                path: client-ca.crt\n---\n# Source: cilium/templates/cilium-envoy/daemonset.yaml\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: cilium-envoy\n  namespace: kube-system\n  labels:\n    k8s-app: cilium-envoy\n    app.kubernetes.io/part-of: cilium\n    app.kubernetes.io/name: cilium-envoy\n    name: cilium-envoy\nspec:\n  selector:\n    matchLabels:\n      k8s-app: cilium-envoy\n  updateStrategy:\n    rollingUpdate:\n      maxUnavailable: 2\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n      labels:\n        k8s-app: cilium-envoy\n        name: cilium-envoy\n        app.kubernetes.io/name: cilium-envoy\n        app.kubernetes.io/part-of: cilium\n    spec:\n      securityContext:\n        appArmorProfile:\n          type: Unconfined\n      containers:\n      - name: cilium-envoy\n        image: \"quay.io/cilium/cilium-envoy:v1.34.7-1757592137-1a52bb680a956879722f48c591a2ca90f7791324@sha256:7932d656b63f6f866b6732099d33355184322123cfe1182e6f05175a3bc2e0e0\"\n        imagePullPolicy: IfNotPresent\n        command:\n        - /usr/bin/cilium-envoy-starter\n        args:\n        - '--'\n        - '-c /var/run/cilium/envoy/bootstrap-config.json'\n        - '--base-id 0'\n        - '--log-level info'\n        startupProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9878\n            scheme: HTTP\n          failureThreshold: 105\n          periodSeconds: 2\n          successThreshold: 1\n          initialDelaySeconds: 5\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9878\n            scheme: HTTP\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 10\n          timeoutSeconds: 5\n        readinessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9878\n            scheme: HTTP\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 3\n          timeoutSeconds: 5\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"localhost\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"7445\"\n        ports:\n        - name: envoy-metrics\n          containerPort: 9964\n          hostPort: 9964\n          protocol: TCP\n        securityContext:\n          seLinuxOptions:\n            level: s0\n            type: spc_t\n          capabilities:\n            add:\n              - NET_ADMIN\n              - SYS_ADMIN\n            drop:\n              - ALL\n        terminationMessagePolicy: FallbackToLogsOnError\n        volumeMounts:\n        - name: envoy-sockets\n          mountPath: /var/run/cilium/envoy/sockets\n          readOnly: false\n        - name: envoy-artifacts\n          mountPath: /var/run/cilium/envoy/artifacts\n          readOnly: true\n        - name: envoy-config\n          mountPath: /var/run/cilium/envoy/\n          readOnly: true\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          mountPropagation: HostToContainer\n      restartPolicy: Always\n      priorityClassName: system-node-critical\n      serviceAccountName: \"cilium-envoy\"\n      automountServiceAccountToken: true\n      terminationGracePeriodSeconds: 1\n      hostNetwork: true\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: cilium.io/no-schedule\n                operator: NotIn\n                values:\n                - \"true\"\n        podAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                k8s-app: cilium\n            topologyKey: kubernetes.io/hostname\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                k8s-app: cilium-envoy\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n      - name: envoy-sockets\n        hostPath:\n          path: \"/var/run/cilium/envoy/sockets\"\n          type: DirectoryOrCreate\n      - name: envoy-artifacts\n        hostPath:\n          path: \"/var/run/cilium/envoy/artifacts\"\n          type: DirectoryOrCreate\n      - name: envoy-config\n        configMap:\n          name: \"cilium-envoy-config\"\n          # note: the leading zero means this number is in octal representation: do not remove it\n          defaultMode: 0400\n          items:\n            - key: bootstrap-config.json\n              path: bootstrap-config.json\n        # To keep state between restarts / upgrades\n        # To keep state between restarts / upgrades for bpf maps\n      - name: bpf-maps\n        hostPath:\n          path: /sys/fs/bpf\n          type: DirectoryOrCreate\n---\n# Source: cilium/templates/cilium-operator/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cilium-operator\n  namespace: kube-system\n  labels:\n    io.cilium/app: operator\n    name: cilium-operator\n    app.kubernetes.io/part-of: cilium\n    app.kubernetes.io/name: cilium-operator\nspec:\n  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go\n  # for more details.\n  replicas: 2\n  selector:\n    matchLabels:\n      io.cilium/app: operator\n      name: cilium-operator\n  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case\n  # of one replica and no user configured Recreate strategy.\n  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the\n  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 50%\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        prometheus.io/port: \"9963\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        io.cilium/app: operator\n        name: cilium-operator\n        app.kubernetes.io/part-of: cilium\n        app.kubernetes.io/name: cilium-operator\n    spec:\n      securityContext:\n        seccompProfile:\n          type: RuntimeDefault\n      containers:\n      - name: cilium-operator\n        image: \"quay.io/cilium/operator-generic:v1.18.2@sha256:cb4e4ffc5789fd5ff6a534e3b1460623df61cba00f5ea1c7b40153b5efb81805\"\n        imagePullPolicy: IfNotPresent\n        command:\n        - cilium-operator-generic\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        - --debug=$(CILIUM_DEBUG)\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_DEBUG\n          valueFrom:\n            configMapKeyRef:\n              key: debug\n              name: cilium-config\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"localhost\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"7445\"\n        ports:\n        - name: prometheus\n          containerPort: 9963\n          hostPort: 9963\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9234\n            scheme: HTTP\n          initialDelaySeconds: 60\n          periodSeconds: 10\n          timeoutSeconds: 3\n        readinessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9234\n            scheme: HTTP\n          initialDelaySeconds: 0\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 5\n        volumeMounts:\n        - name: cilium-config-path\n          mountPath: /tmp/cilium/config-map\n          readOnly: true\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            drop:\n            - ALL\n        terminationMessagePolicy: FallbackToLogsOnError\n      hostNetwork: true\n      restartPolicy: Always\n      priorityClassName: system-cluster-critical\n      serviceAccountName: \"cilium-operator\"\n      automountServiceAccountToken: true\n      # In HA mode, cilium-operator pods must not be scheduled on the same\n      # node as they will clash with each other.\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                io.cilium/app: operator\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - key: node-role.kubernetes.io/control-plane\n          operator: Exists\n        - key: node-role.kubernetes.io/master\n          operator: Exists\n        - key: node.kubernetes.io/not-ready\n          operator: Exists\n        - key: node.cloudprovider.kubernetes.io/uninitialized\n          operator: Exists\n        - key: node.cilium.io/agent-not-ready\n          operator: Exists\n      \n      volumes:\n        # To read the configuration from the config map\n      - name: cilium-config-path\n        configMap:\n          name: cilium-config\n"


